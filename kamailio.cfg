### LOG Levels: 3=DBG, 2=INFO, 1=NOTICE, 0=WARN, -1=ERR
#!ifdef WITH_DEBUG
debug=2
log_stderror=no
#!else
debug=2
log_stderror=yes
#!endif

memdbg=5
memlog=5

loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "tls.so"
loadmodule "textops.so"
loadmodule "siputils.so"
loadmodule "xhttp.so"
loadmodule "websocket.so"
loadmodule "xlog"
log_facility=LOG_LOCAL0
children=1

enable_tls=yes
tcp_accept_no_cl=yes

modparam("tls", "private_key", "/tls/certs/ws.castmm.com/privkey.pem")
modparam("tls", "certificate", "/tls/certs/ws.castmm.com/cert.pem")
modparam("tls", "ca_list", "/tls/etc/certs/ca_list.pem")
# modparam("tls", "tls_method", "SSLv23")

listen=tls:54.39.133.17:449
listen=udp:54.39.133.17:5060

loadmodule "rtc_gw.so"
modparam("rtc_gw", "server_address", "54.39.133.17");

request_route {
	if(is_method("INVITE") && !has_totag()) {
			rtc_sdp_offer();
			exit;
	}
}

//if (is_method("BYE")) {
//           rtc_bye();
//           sl_send_reply("200", "OK");
//}


event_route[xhttp:request] {
        set_reply_close();                                                                                                                                               
        set_reply_no_connect();

        if ($Rp != 80 && $Rp != 443) {
                xlog("L_WARN", "event_route[xhttp:request]: HTTP request received on $Rp\n");
                xhttp_reply("403", "Forbidden", "", "");
                exit;
        }

        xlog("L_DEBUG", "event_route[xhttp:request]: HTTP Request Received\n");

        if ($hdr(Upgrade)=~"websocket"
                        && $hdr(Connection)=~"Upgrade"
                        && $rm=~"GET") {
                if (ws_handle_handshake()) {
                        # successful connection
                        exit;
                }
        }
        xhttp_reply("404", "Not Found", "", "");
}
